generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Bills {
  id           Int      @id @default(autoincrement())
  user_id      Int
  reward_id    Int
  creationDate String
  amountReward Float
  feePaid      Boolean?
  rewardPaid   Boolean?
  Rewards      Rewards  @relation(fields: [reward_id], references: [rewardID])
  User         User     @relation(fields: [user_id], references: [id])
}

model Profile {
  id            Int     @id @default(autoincrement())
  user_id       Int     @unique
  wallet_BTC    String? @unique
  wallet_LTC    String? @unique
  wallet_Kadena String? @unique
  wallet_Zcash  String? @unique
  empresa       String?
  telefono      String?
  direccion     String?
  User          User    @relation(fields: [user_id], references: [id])
}

model Rewards {
  rewardID        Int      @id @default(autoincrement())
  collectionID    Int
  creationDate    String
  dates           String[]
  recompensas     Float[]
  hashrate        Float[]
  feePool         Float?
  feeColl         Float?
  feeEnergy       Float?
  ratioSuccess    String?
  totalRecompensa Float?
  Bills           Bills[]
}

model User {
  id             Int              @id @default(autoincrement())
  first_name     String
  last_name      String
  email          String           @unique
  password       String
  authToken      String?
  rol            String?
  wallet_ETH     String?          @unique
  auth_uuid      String?          @unique
  stripe_id      String?          @unique
  payIDStripe    String?          @unique
  referall       String           @unique
  referallBy     String?
  kycPassed      Boolean?
  Bills          Bills[]
  Profile        Profile?
  nftsdead       nftsdead[]
  nftsDesactive  nftsDesactive[]
  facturas       facturas[]
  notificaciones notificaciones[]
}

model nftsdead {
  id      Int  @id @default(autoincrement())
  sc_id   Int  @unique
  user_id Int
  User    User @relation(fields: [user_id], references: [id])
}

model nftsDesactive {
  nft_id      Int    @id
  user_id     Int
  lastPayDate String
  dayCost     Float
  User        User   @relation(fields: [user_id], references: [id])
}

model facturas {
  id             Int     @id @default(autoincrement())
  user_id        Int
  fecha          String
  cantidad       Int
  coste_unitario Float
  descripcion    String?
  first_name     String
  last_name      String
  direccion      String?
  User           User    @relation(fields: [user_id], references: [id])
}

model notificaciones {
  id          Int     @id @default(autoincrement())
  user_id     Int
  fecha       String
  titulo      String
  tipo        String
  descripcion String?
  User        User    @relation(fields: [user_id], references: [id])
}
